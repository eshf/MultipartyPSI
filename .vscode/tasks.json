{
    "version": "2.0.0",
    "tasks": [
        {
            "type": "shell",
            "label": "C/C++: g++ build active file",
            "command": "/usr/bin/gcc",
            "args": [
                "-g",
                "${workspaceFolder}/*.cpp",
                "-o",
                "${fileDirname}/${fileBasenameNoExtension}",
                "-I",
                "${workspaceFolder}/**",
                "${workspaceFolder}/cryptoTools/Common/**",
                "${workspaceFolder}/cryptoTools/Crypto/**",
                "${workspaceFolder}/cryptoTools/Network/**",
                "${workspaceFolder}/libOPRF/Hashing/**",
                "${workspaceFolder}/libOPRF/OPPRF/**",
                "${workspaceFolder}/libOTe/Base/**",
                "${workspaceFolder}/libOTe/NChooseK/**",
                "${workspaceFolder}/libOTe/NChooseOne/**",
                "${workspaceFolder}/libOTe/Tools/**",
                "${workspaceFolder}/libOTe/TwoChooseOne/**",
                "${workspaceFolder}/libOTe/Base/**",
                "${workspaceFolder}/libPSI_TestsVS/**",
                "${workspaceFolder}/libPSI_Tests/**",
                "${workspaceFolder}/thirdparty/linux/miracl/**",
                "${workspaceFolder}/thirdparty/linux/ntl/**",
                "${workspaceFolder}/thirdparty/win/**",
                "${workspaceFolder}/testnpsi/appmpsi/**",
                "${workspaceFolder}/emsdk/scripts/**",
                "${workspaceFolder}/emsdk/test/**",
                "${workspaceFolder}/emsdk/upstream/bin/**",
                "${workspaceFolder}/emsdk/upstream/emscripten/**",
                "${workspaceFolder}/emsdk/upstream/lib/**",
                "${workspaceFolder}/emsdk/upstream/include/c++/v1/**",
                "${workspaceFolder}/emsdk/upstream/include/c++/v1/**",
                "${workspaceFolder}/emsdk/upstream/**",
                "${workspaceFolder}/emsdk/bazel/emscripten_toolchain/**",
                "${workspaceFolder}/emsdk/bazel/hello-world/**",
                "${workspaceFolder}/emsdk/bazel/test_external/**",
                "${workspaceFolder}/emsdk/docker/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/bin/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/share/doc/node/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/share/man/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/share/systemtap/tapset/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/node/cppgc/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/node/libplatform/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/node/openssl/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/node/openssl/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/include/node/uv/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/lib/node_modules/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/lib/node_modules/corepack/dist/**",
                "${workspaceFolder}/emsdk/node/16.20.0_64bit/lib/node_modules/corepack/shims/nodewin/**",
                "-lsfml-audio",
                "-lsfml-graphics",
                "-lsfml-network",
                "-lsfml-system",
                "-lsfml-window",
                "-lshlwapi"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "detail": "compiler:/usr/bin/gcc"
        },
    {
    "type": "shell",
    "label": "cmake",
    "command": "cmake",
    "args": [
        "-Bbuild",
        "-DCMAKE_CXX_FLAGS=-g",
        "-DCMAKE_BUILD_TYPE=release",
    ],
    "options": {
        "cwd": "${workspaceFolder}"
    },
    "dependsOn": [
        "clean"
    ],
    "problemMatcher": []
}
]
}


